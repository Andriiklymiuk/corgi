"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[242],{9613:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(b,i(i({ref:t},d),{},{components:n})):r.createElement(b,i({ref:t},d))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(8957),a=(n(9496),n(9613));const o={sidebar_position:5},i="How to run db helpers",l={unversionedId:"db_helpers",id:"db_helpers",title:"How to run db helpers",description:"These are helpers command for your db_services.",source:"@site/docs/db_helpers.md",sourceDirName:".",slug:"/db_helpers",permalink:"/corgi/docs/db_helpers",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"corgi test",permalink:"/corgi/docs/commands/corgi_test"},next:{title:"Create database dump",permalink:"/corgi/docs/database_dump"}},s={},c=[{value:"Database seeding",id:"database-seeding",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-run-db-helpers"},"How to run db helpers"),(0,a.kt)("p",null,"These are helpers command for your db_services."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  # this will show you help message\n  corgi\n\n  # before running db commands you need to create corgi-compose.yml file, add services config there and run corgi init, so that there is db_services folder, that is created\n\n  # example to run db service\n  corgi db\n\n  # example to show help commands\n  corgi db -h\n  corgi -h\n")),(0,a.kt)("p",null,"You can run cli with flags, without specifying service, to do smth with all\ndatabases, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  # run db service and start all databases\n  corgi db -u\n  # similar to\n  corgi db -upAll\n\n  # stop, remove and start all databases \n  corgi db  -r -s -u\n  # similar to\n  corgi db  -rsu\n  # similar to\n  corgi db  -removeAll -stopAll -upAll\n")),(0,a.kt)("p",null,"You can run each service individually, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"corgi db"),". It will show you\ninteractive menu to choose one of the service databases, that are located in\n",(0,a.kt)("inlineCode",{parentName:"p"},"corgi_services/db_services")," folder."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190 \n? Select service: \n  \u25b8 \ud83d\uded1  close program\n    analytics\n    backend\n    backoffice\n")),(0,a.kt)("p",null,"This menu helps to choose target service and its commands, that are located in\nMakefile of targeted service (we choose backoffice service for example)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Connection info to backoffice:\n\nPORT 5432\nUSER corgi\nPASSWORD corgiPassword\nDB corgi-adm\n\nbackoffice ist running \ud83d\udd34\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190 \n? Select command: \n  \u25b8 \u2b05\ufe0f  go back\n    down\n    help\n    id\n    listDocker\n    seed\n\u2193   up\n")),(0,a.kt)("h2",{id:"database-seeding"},"Database seeding"),(0,a.kt)("p",null,"If you want to do seeding manually to do database seeding (population with\ndata), you can do it:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h3",{parentName:"li",id:"automatically-recommended"},"Automatically (",(0,a.kt)("strong",{parentName:"h3"},"recommended"),")"))),(0,a.kt)("p",null,"Add seedSource in ",(0,a.kt)("inlineCode",{parentName:"p"},"corgi-compose.yml")," and then run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"corgi run --seed\n")),(0,a.kt)("p",null,"It will create dump of data and then seed it to your database."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tip")," You can add in ",(0,a.kt)("inlineCode",{parentName:"p"},"seedFromDbEnvPath")," the path to env config with db in the\nform of:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"DB_HOST=host_of_db_from_which_to_get_dump\nDB_NAME=name_of_db_from_which_to_get_dump\nDB_USER=user_of_db_from_which_to_get_dump\nDB_PASSWORD=password_of_db_from_which_to_get_dump\nDB_PORT=port_of_db_from_which_to_get_dump\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h3",{parentName:"li",id:"manually"},"Manually"))),(0,a.kt)("p",null,"If you provided seedSource in ",(0,a.kt)("inlineCode",{parentName:"p"},"corgi-compose.yml"),", than you can do:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"corgi db"),"-> choose service -> Choose ",(0,a.kt)("strong",{parentName:"li"},"dump")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"corgi db"),"-> choose service -> Choose ",(0,a.kt)("strong",{parentName:"li"},"seed"))),(0,a.kt)("p",null,"If no seedSource provided:"),(0,a.kt)("ol",{start:0},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/corgi/docs/database_dump"},"Create database dump"),", name it ",(0,a.kt)("inlineCode",{parentName:"li"},"dump.sql")," and place it\nin targeted service, e.g. place it in ",(0,a.kt)("inlineCode",{parentName:"li"},"corgi_services/db_services/backoffice"),"\nfolder"),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"corgi db")," from root folder"),(0,a.kt)("li",{parentName:"ol"},"Choose service"),(0,a.kt)("li",{parentName:"ol"},"Choose seed. It will populate db.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Important"),": seeding is best to do on newly created db."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/intro"},"Main docs")))}u.isMDXComponent=!0}}]);
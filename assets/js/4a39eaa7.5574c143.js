"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[1456],{909:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=o(6425),t=(o(7953),o(8860));const i={},a="corgi fork",c={unversionedId:"commands/corgi_fork",id:"commands/corgi_fork",title:"corgi fork",description:"corgi fork",source:"@site/docs/commands/corgi_fork.md",sourceDirName:"commands",slug:"/commands/corgi_fork",permalink:"/corgi/docs/commands/corgi_fork",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"corgi doctor",permalink:"/corgi/docs/commands/corgi_doctor"},next:{title:"corgi init",permalink:"/corgi/docs/commands/corgi_init"}},l={},s=[{value:"corgi fork",id:"corgi-fork-1",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 2-Sep-2024",id:"auto-generated-by-spf13cobra-on-2-sep-2024",level:6}],p={toc:s},m="wrapper";function g(e){let{components:r,...o}=e;return(0,t.yg)(m,(0,n.A)({},p,o,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"corgi-fork"},"corgi fork"),(0,t.yg)("h2",{id:"corgi-fork-1"},"corgi fork"),(0,t.yg)("p",null,"Fork an existing service repositories to new repos."),(0,t.yg)("h3",{id:"synopsis"},"Synopsis"),(0,t.yg)("p",null,"This is command, that helps to start new projects using currently cloned/created repos and pushing them to newly created ones."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"corgi fork [flags]\n")),(0,t.yg)("h3",{id:"examples"},"Examples"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"corgi fork --all\n\ncorgi fork\n\ncorgi fork --all --private --useSameRepoName --gitProvider github\n")),(0,t.yg)("h3",{id:"options"},"Options"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"      --all                  Fork all repos\n      --gitProvider string   Git provider for new repo\n  -h, --help                 help for fork\n      --private              Create private repo\n      --useSameRepoName      Use previous repo name for new repo\n")),(0,t.yg)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'      --describe                  Describe contents of corgi-compose file\n      --dockerContext string      Specify docker context to use, can be default,orbctl,colima (default "default")\n  -l, --exampleList               List examples to choose from. Click on any example to download it\n  -f, --filename string           Custom filepath for for corgi-compose\n      --fromScratch               Clean corgi_services folder before running\n  -t, --fromTemplate string       Create corgi service from template url\n      --fromTemplateName string   Create corgi service from template name and url\n  -g, --global                    Use global path to one of the services\n      --privateToken string       Private token for private repositories to download files\n      --runOnce                   Run corgi once and exit\n      --silent                    Hide all welcome messages\n')),(0,t.yg)("h3",{id:"see-also"},"SEE ALSO"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"corgi"},"corgi"),"\t - Corgi cli magic friend")),(0,t.yg)("h6",{id:"auto-generated-by-spf13cobra-on-2-sep-2024"},"Auto generated by spf13/cobra on 2-Sep-2024"))}g.isMDXComponent=!0},8860:(e,r,o)=>{o.d(r,{xA:()=>p,yg:()=>d});var n=o(7953);function t(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function i(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?i(Object(o),!0).forEach((function(r){t(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function c(e,r){if(null==e)return{};var o,n,t=function(e,r){if(null==e)return{};var o,n,t={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],r.indexOf(o)>=0||(t[o]=e[o]);return t}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=n.createContext({}),s=function(e){var r=n.useContext(l),o=r;return e&&(o="function"==typeof e?e(r):a(a({},r),e)),o},p=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var o=e.components,t=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(o),f=t,d=m["".concat(l,".").concat(f)]||m[f]||g[f]||i;return o?n.createElement(d,a(a({ref:r},p),{},{components:o})):n.createElement(d,a({ref:r},p))}));function d(e,r){var o=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=o.length,a=new Array(i);a[0]=f;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[m]="string"==typeof e?e:t,a[1]=c;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}f.displayName="MDXCreateElement"}}]);
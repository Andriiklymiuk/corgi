"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[1928],{9613:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>f});var n=t(9496);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return t?n.createElement(f,a(a({ref:r},d),{},{components:t})):n.createElement(f,a({ref:r},d))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4321:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(8957),o=(t(9496),t(9613));const i={},a="corgi start",s={unversionedId:"commands/corgi_start",id:"commands/corgi_start",title:"corgi start",description:"corgi start",source:"@site/docs/commands/corgi_start.md",sourceDirName:"commands",slug:"/commands/corgi_start",permalink:"/corgi/docs/commands/corgi_start",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"corgi run",permalink:"/corgi/docs/commands/corgi_run"},next:{title:"corgi test",permalink:"/corgi/docs/commands/corgi_test"}},c={},l=[{value:"corgi start",id:"corgi-start-1",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 2-May-2024",id:"auto-generated-by-spf13cobra-on-2-may-2024",level:6}],d={toc:l},p="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"corgi-start"},"corgi start"),(0,o.kt)("h2",{id:"corgi-start-1"},"corgi start"),(0,o.kt)("p",null,"Run all databases and services. this is alias for run"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"This command helps to run all services and their dependent services."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"corgi start [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --dbServices strings   Slice of db_services to choose from.\n                             \n                             If you provide at least 1 db_service here, than corgi will choose only this db_service, while ignoring all others.\n                             none - will ignore all db_services run.\n                             (--dbServices db,db1,db2)\n                             \n                             By default all db_services are included and run.\n                                    \n  -h, --help                 help for start\n      --omit strings         Slice of parts of service to omit.\n                             \n                             beforeStart - beforeStart in services is omitted.\n                             afterStart - afterStart in services is omitted.\n                             \n                             By default nothing is omitted\n                                    \n      --pull                 Pull services repo changes\n  -s, --seed                 Seed all db_services that have seedSource or have dump.sql / dump.bak or other dump file in their folder\n      --services strings     Slice of services to choose from.\n                             \n                             If you provide at least 1 services here, than corgi will choose only this service, while ignoring all others.\n                             none - will ignore all services run.\n                             (--services app,server)\n                             \n                             By default all services are included and run.\n                                    \n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --describe               Describe contents of corgi-compose file\n      --dockerContext string   Specify docker context to use, can be default,orbctl,colima (default "default")\n  -f, --filename string        Custom filepath for for corgi-compose\n      --fromScratch            Clean corgi_services folder before running\n  -t, --fromTemplate string    Create corgi service from template url\n      --privateToken string    Private token for private repositories to download files\n      --runOnce                Run corgi once and exit\n      --silent                 Hide all welcome messages\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"corgi"},"corgi"),"\t - Corgi cli magic friend")),(0,o.kt)("h6",{id:"auto-generated-by-spf13cobra-on-2-may-2024"},"Auto generated by spf13/cobra on 2-May-2024"))}u.isMDXComponent=!0}}]);
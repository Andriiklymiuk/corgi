"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[8255],{9613:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>f});var n=t(9496);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),u=o,f=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return t?n.createElement(f,i(i({ref:r},d),{},{components:t})):n.createElement(f,i({ref:r},d))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4246:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=t(8957),o=(t(9496),t(9613));const a={},i="corgi db",c={unversionedId:"commands/corgi_db",id:"commands/corgi_db",title:"corgi db",description:"corgi db",source:"@site/docs/commands/corgi_db.md",sourceDirName:"commands",slug:"/commands/corgi_db",permalink:"/corgi/docs/commands/corgi_db",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"corgi create",permalink:"/corgi/docs/commands/corgi_create"},next:{title:"corgi docs",permalink:"/corgi/docs/commands/corgi_docs"}},l={},s=[{value:"corgi db",id:"corgi-db-1",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 2-Apr-2024",id:"auto-generated-by-spf13cobra-on-2-apr-2024",level:6}],d={toc:s},p="wrapper";function m(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"corgi-db"},"corgi db"),(0,o.kt)("h2",{id:"corgi-db-1"},"corgi db"),(0,o.kt)("p",null,"Database action helpers"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"This is database generator helper, that is accessible from cli.\nYou can do db commands with the help of Makefile directly in the folder of\neach service, but this is much easier to do it here."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"corgi db [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -d, --downAll     Down all database services, stop and remove all\n  -h, --help        help for db\n  -r, --removeAll   Remove all database services\n      --seedAll     Seed all database services\n  -s, --stopAll     Stop all database services\n  -u, --upAll       Up all database services, start all\n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --describe               Describe contents of corgi-compose file\n      --dockerContext string   Specify docker context to use, can be default,orbctl,colima (default "default")\n  -f, --filename string        Custom filepath for for corgi-compose\n      --fromScratch            Clean corgi_services folder before running\n  -t, --fromTemplate string    Create corgi service from template url\n      --runOnce                Run corgi once and exit\n      --silent                 Hide all welcome messages\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"corgi"},"corgi"),"\t - Corgi cli magic friend")),(0,o.kt)("h6",{id:"auto-generated-by-spf13cobra-on-2-apr-2024"},"Auto generated by spf13/cobra on 2-Apr-2024"))}m.isMDXComponent=!0}}]);
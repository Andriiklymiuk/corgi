"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[5204],{4886:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/links_meme-4e25a9222405537f084af6d51eb7c181.jpg"},8860:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>u});var a=n(7953);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var g=a.createContext({}),o=function(e){var t=a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(g.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,g=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=o(n),y=r,u=m["".concat(g,".").concat(y)]||m[y]||s[y]||l;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=y;var d={};for(var g in t)hasOwnProperty.call(t,g)&&(d[g]=t[g]);d.originalType=e,d[m]="string"==typeof e?e:r,i[1]=d;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var a=n(6425),r=(n(7953),n(8860));const l={sidebar_position:3},i="Corgi compose items",d={unversionedId:"corgi_compose_items",id:"corgi_compose_items",title:"Corgi compose items",description:"Links meme",source:"@site/docs/corgi_compose_items.md",sourceDirName:".",slug:"/corgi_compose_items",permalink:"/corgi/docs/corgi_compose_items",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"What is my purpose?",permalink:"/corgi/docs/why_it_exists"},next:{title:"Commands",permalink:"/corgi/docs/category/commands"}},g={},o=[],p={toc:o},m="wrapper";function s(e){let{components:t,...l}=e;return(0,r.yg)(m,(0,a.A)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"corgi-compose-items"},"Corgi compose items"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Links meme",src:n(4886).A,width:"1200",height:"675"})),(0,r.yg)("p",null,"Examples of these items usage can be found in\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Andriiklymiuk/corgi_examples"},"examples repo"),"."),(0,r.yg)("p",null,"You can add service in services part of yml file."),(0,r.yg)("p",null,"Corgi compose ",(0,r.yg)("inlineCode",{parentName:"p"},"service")," can contain the following items (properties):"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Item"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Example"),(0,r.yg)("th",{parentName:"tr",align:null},"itemType"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"cloneFrom"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"git@github.com:Andriiklymiuk/corgi.git")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Git url to target repo. By default nothing is cloned.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"branch"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"some/feature/branch")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Branch to use for git checkout. By default default branch for repo is used.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"environment"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- YOUR_ENV=dev- YOUR__ANTOHER_ENV=abcdef"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"List of environment variables to copy and put into your env file.By default no environments are added.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"envPath"),(0,r.yg)("td",{parentName:"tr",align:"left"},"./path/to/.env"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Path to .env file in target repo. By default .env file is used")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ignoreEnv"),(0,r.yg)("td",{parentName:"tr",align:"left"},"false"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Should service ignore env and don't change env file or not. By default is false (env is not ignored)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"path"),(0,r.yg)("td",{parentName:"tr",align:"left"},"./path/to/target/repo"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Path to the actual project repo.By default the path to the folder in which corgi-compose.yml is used")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"copyEnvFromFilePath"),(0,r.yg)("td",{parentName:"tr",align:"left"},"./path/to/.env-file-to-copy-from"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The path to the .env, which content will be copied to service repo .env file")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"port"),(0,r.yg)("td",{parentName:"tr",align:"left"},"5432"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number")),(0,r.yg)("td",{parentName:"tr",align:null},"Service port, that will be added to .env file.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"portAlias"),(0,r.yg)("td",{parentName:"tr",align:"left"},"PORT"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Service port env name alias, that will be added to .env file.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"manualRun"),(0,r.yg)("td",{parentName:"tr",align:"left"},"true"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},"Determines if the service will be run with run cmd.If it is true, that to run you add ",(0,r.yg)("inlineCode",{parentName:"td"},"--services manual_to_run_service")," to run cmd.By default it is false.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"depends_on_db"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- name: db_name_from_db_services- envAlias: NAME_BEFORE_DB_IN_ENV"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]DependsOnDb")),(0,r.yg)("td",{parentName:"tr",align:null},"Adds db credentials (",(0,r.yg)("inlineCode",{parentName:"td"},"DB_HOST"),",etc) from db_services will be copied to .env.envAlias adds string before db credentials, like NAME_BEFORE_DB_IN_ENV_DB_HOST")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"depends_on_services"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- name: service_name- envAlias: NAME_TO_USE_IN_ENV- suffix: /special/suffix"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]DependsOnService")),(0,r.yg)("td",{parentName:"tr",align:null},"Adds service credentials to .env.suffix is added at the end of added valueNAME_TO_USE_IN_ENV=localhost:port/special/suffix will be added to .envIf you add just name, than it is SERVICE_NAME=localhost:port_in_env")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"beforeStart"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- install dependencies- do some builds"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"List of commands to run consequently, before start commands are run.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"start"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- run your service- run some other stuff"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"List of commands to run in parallel for the service needs.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"afterStart"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- do some needed cleanups"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"List of commands to run consequently, when the cli is exited.")))),(0,r.yg)("p",null,"Also, you can add service in db_services part. Corgi compose ",(0,r.yg)("inlineCode",{parentName:"p"},"db_service")," can\ncontain the following items (properties):"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Item"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Example"),(0,r.yg)("th",{parentName:"tr",align:null},"itemType"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"driver"),(0,r.yg)("td",{parentName:"tr",align:"left"},"postgres"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database driver for this service. By default postgres is used.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"host"),(0,r.yg)("td",{parentName:"tr",align:"left"},"localhost"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database host for this service, that will be used in ",(0,r.yg)("inlineCode",{parentName:"td"},"DB_HOST"),". By default localhost is used")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"version"),(0,r.yg)("td",{parentName:"tr",align:"left"},"1.0.1"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database version for the service creation. By default latest is used")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"databaseName"),(0,r.yg)("td",{parentName:"tr",align:"left"},"corgi-database"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database name for this service, that will be used in ",(0,r.yg)("inlineCode",{parentName:"td"},"DB_NAME"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"user"),(0,r.yg)("td",{parentName:"tr",align:"left"},"corgi"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database user for this service, that will be used in ",(0,r.yg)("inlineCode",{parentName:"td"},"DB_USER"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"password"),(0,r.yg)("td",{parentName:"tr",align:"left"},"corgiSecurePassword"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database password for this service, that will be used in ",(0,r.yg)("inlineCode",{parentName:"td"},"DB_PASSWORD"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"port"),(0,r.yg)("td",{parentName:"tr",align:"left"},"5432"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number")),(0,r.yg)("td",{parentName:"tr",align:null},"This is database port for this service, that will be used in ",(0,r.yg)("inlineCode",{parentName:"td"},"DB_PORT"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"seedFromFilePath"),(0,r.yg)("td",{parentName:"tr",align:"left"},"./path/to/dump.sql"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Path to dump.sql file from which data is seeded.Use either seedFromFilePath or seedFromDb/seedFromDbEnvPath")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"seedFromDbEnvPath"),(0,r.yg)("td",{parentName:"tr",align:"left"},"./path/to/db/info/.env"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Path to .env file with db credentials for db, from which data is seeded.Use either seedFromFilePath or seedFromDb/seedFromDbEnvPath")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"seedFromDb"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- host: seed_db_host- databaseName: seed_db_name- user: seed_db_user- password: seed_db_password- port: seed_db_port"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"SeedFromDb")),(0,r.yg)("td",{parentName:"tr",align:null},"Db credentials to seed from.Use either seedFromFilePath or seedFromDb/seedFromDbEnvPath")))),(0,r.yg)("p",null,"Also, you can add required items in required part. Corgi compose ",(0,r.yg)("inlineCode",{parentName:"p"},"required")," can\ncontain the following items (properties):"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Item"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Example"),(0,r.yg)("th",{parentName:"tr",align:null},"itemType"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"why"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- pass butter- help with service X"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"The reasons to use/install this required command.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"install"),(0,r.yg)("td",{parentName:"tr",align:"left"},"- install cmd 1- install cmd 2"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]string")),(0,r.yg)("td",{parentName:"tr",align:null},"Installation steps to run, if cmd not found.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional"),(0,r.yg)("td",{parentName:"tr",align:"left"},"true"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},"Show or not the prompt, before this cmd installation.By default false.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"checkCmd"),(0,r.yg)("td",{parentName:"tr",align:"left"},"this_command -v"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Command to run to check, if it is installed.By default cmd name is used.")))),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/intro"},"Main docs")))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkcorgi_docs=self.webpackChunkcorgi_docs||[]).push([[2837],{9613:(e,r,o)=>{o.d(r,{Zo:()=>p,kt:()=>u});var t=o(9496);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function i(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function a(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?i(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function c(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=t.createContext({}),s=function(e){var r=t.useContext(l),o=r;return e&&(o="function"==typeof e?e(r):a(a({},r),e)),o},p=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},f="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(o),d=n,u=f["".concat(l,".").concat(d)]||f[d]||m[d]||i;return o?t.createElement(u,a(a({ref:r},p),{},{components:o})):t.createElement(u,a({ref:r},p))}));function u(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=d;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[f]="string"==typeof e?e:n,a[1]=c;for(var s=2;s<i;s++)a[s]=o[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},4475:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var t=o(8957),n=(o(9496),o(9613));const i={},a="corgi fork",c={unversionedId:"commands/corgi_fork",id:"commands/corgi_fork",title:"corgi fork",description:"corgi fork",source:"@site/docs/commands/corgi_fork.md",sourceDirName:"commands",slug:"/commands/corgi_fork",permalink:"/corgi/docs/commands/corgi_fork",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"corgi doctor",permalink:"/corgi/docs/commands/corgi_doctor"},next:{title:"corgi init",permalink:"/corgi/docs/commands/corgi_init"}},l={},s=[{value:"corgi fork",id:"corgi-fork-1",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 18-Sep-2023",id:"auto-generated-by-spf13cobra-on-18-sep-2023",level:6}],p={toc:s},f="wrapper";function m(e){let{components:r,...o}=e;return(0,n.kt)(f,(0,t.Z)({},p,o,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"corgi-fork"},"corgi fork"),(0,n.kt)("h2",{id:"corgi-fork-1"},"corgi fork"),(0,n.kt)("p",null,"Fork an existing service repositories to new repos."),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"This is command, that helps to bootstrap new projects using currently cloned/created repos and pushing them to newly created ones."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"corgi fork [flags]\n")),(0,n.kt)("h3",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"corgi fork --all\n\ncorgi fork\n\ncorgi fork --all --private --useSameRepoName --gitProvider github\n    \n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --all                  Fork all repos\n      --gitProvider string   Git provider for new repo\n  -h, --help                 help for fork\n      --private              Create private repo\n      --useSameRepoName      Use previous repo name for new repo\n")),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --describe          Describe contents of corgi-compose file\n  -f, --filename string   Custom filepath for for corgi-compose\n      --fromScratch       Clean corgi_services folder before running\n      --silent            Hide all welcome messages\n")),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"corgi"},"corgi"),"\t - Corgi cli magic friend")),(0,n.kt)("h6",{id:"auto-generated-by-spf13cobra-on-18-sep-2023"},"Auto generated by spf13/cobra on 18-Sep-2023"))}m.isMDXComponent=!0}}]);
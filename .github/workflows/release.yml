name: Create release

on:
  push:
    branches:
      - "main"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Get version and add it to GITHUB_ENV
        run: make getActionVersion

      - name: Extract APP_VERSION and Create Tag
        id: create-tag
        run: |
          TAG="v${VERSION}"

          echo "VERSION: ${VERSION}"
          echo "TAG: $TAG"

          # Check if the tag exists
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${GITHUB_TOKEN}" https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/$TAG)

          if [ "$HTTP_STATUS" -ne 200 ]
          then
            echo "Tag does not exist, creating new tag"
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
            git tag $TAG
            git push origin $TAG
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          else
            echo "Tag already exists"
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - run: git fetch --force --tags

      - name: Run GoReleaser
        if: env.TAG_EXISTS == 'false'
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          CGO_ENABLED: 1
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
